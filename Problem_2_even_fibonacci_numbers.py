"""
Even Fibonacci numbers
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

"""


from ossaudiodev import SOUND_MIXER_DIGITAL2


def fibonacci_classical(x):
        if x == 1 or x == 2:
            return x
        else:
            return fibonacci_classical(x-1) + fibonacci_classical(x-2)

sequence = [1,2]
sum = 0
for x in range(0,40):
    if sequence[x]%2 == 0:
        print(sequence[x])
        sum += sequence[x]
    sequence.append(sequence[x] + sequence[x+1])
    if sequence[x] > 4000000:
        break  
print(sum)
print(sequence)
